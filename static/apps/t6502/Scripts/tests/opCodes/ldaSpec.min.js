var Tests;(function(){describe("LDA - Load Accumulator",function(){var i,n,r,t;beforeEach(function(){module("app")}),beforeEach(function(){inject(function(t,u){i=t,r=u,n=i.getCpu()})}),describe("Values",function(){beforeEach(function(){t=new Emulator.LoadAccumulatorImmediate}),describe("given any value",function(){beforeEach(function(){n.poke(n.rPC,18),t.execute(n)}),it("then should set the accumulator to the value",function(){expect(n.rA).toBe(18)})}),describe("given zero value",function(){beforeEach(function(){n.poke(n.rPC,0),t.execute(n)}),it("then should set the zero flag",function(){expect(n.checkFlag(Constants.ProcessorStatus.ZeroFlagSet)).toBe(!0)})}),describe("given non-zero value",function(){beforeEach(function(){n.poke(n.rPC,1),n.setFlag(Constants.ProcessorStatus.ZeroFlagSet,!0),t.execute(n)}),it("then should reset the zero flag",function(){expect(n.checkFlag(Constants.ProcessorStatus.ZeroFlagSet)).toBe(!1)})}),describe("given negative value",function(){beforeEach(function(){n.poke(n.rPC,129),t.execute(n)}),it("then should set the negative flag",function(){expect(n.checkFlag(Constants.ProcessorStatus.NegativeFlagSet)).toBe(!0)})}),describe("given non-negative value",function(){beforeEach(function(){n.poke(n.rPC,127),n.setFlag(Constants.ProcessorStatus.NegativeFlagSet,!0),t.execute(n)}),it("then should reset the negative flag",function(){expect(n.checkFlag(Constants.ProcessorStatus.NegativeFlagSet)).toBe(!1)})})}),describe("Modes",function(){describe("Given LDA Absolute",function(){beforeEach(function(){t=new Emulator.LoadAccumulatorAbsolute}),describe("then should load the value at the specified address",function(){beforeEach(function(){n.poke(n.rPC,0),n.poke(n.rPC+1,192),n.poke(49152,18),t.execute(n)}),it("then should set the accumulator to the value",function(){expect(n.rA).toBe(18)})})}),describe("Given LDA Absolute X",function(){beforeEach(function(){t=new Emulator.LoadAccumulatorAbsoluteX}),describe("given a value at the specified address with X offset",function(){beforeEach(function(){n.poke(n.rPC,0),n.poke(n.rPC+1,192),n.poke(49162,18),n.rX=10,t.execute(n)}),it("then should set the accumulator to the value",function(){expect(n.rA).toBe(18)})})}),describe("Given LDA Zero Page",function(){beforeEach(function(){t=new Emulator.LoadAccumulatorZeroPage}),describe("given a value value at the specified zero page address",function(){beforeEach(function(){n.poke(n.rPC,80),n.poke(80,18),t.execute(n)}),it("then should set the accumulator to the value",function(){expect(n.rA).toBe(18)})})})})})})(Tests||(Tests={}))