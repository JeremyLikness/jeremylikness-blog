var Tests;(function(){describe("Decrement Specs",function(){var u,n,h,t,i=18,f=i-1,r=130,e=r-1,o=0,s=255;beforeEach(function(){module("app")}),beforeEach(function(){inject(function(t,i){u=t,h=i,n=u.getCpu()})}),describe("DEX - Decrement X Register",function(){beforeEach(function(){t=new Emulator.DecXSingle}),describe("given any value greater than 0x0",function(){beforeEach(function(){n.rX=i,t.execute(n)}),it("then should set the X register to one less than the value",function(){expect(n.rX).toBe(f),expect(n.checkFlag(Constants.ProcessorStatus.NegativeFlagSet)).toBe(!1),expect(n.checkFlag(Constants.ProcessorStatus.ZeroFlagSet)).toBe(!1)})}),describe("given any negative value greater than 0x80",function(){beforeEach(function(){n.rX=r,t.execute(n)}),it("then should set the X register to one less than the value and set the negative flag",function(){expect(n.rX).toBe(e),expect(n.checkFlag(Constants.ProcessorStatus.NegativeFlagSet)).toBe(!0),expect(n.checkFlag(Constants.ProcessorStatus.ZeroFlagSet)).toBe(!1)})}),describe("given 0x00",function(){beforeEach(function(){n.rX=o,t.execute(n)}),it("then should set the X register to 0xFF (roll) and set the negative flag",function(){expect(n.rX).toBe(s),expect(n.checkFlag(Constants.ProcessorStatus.ZeroFlagSet)).toBe(!1),expect(n.checkFlag(Constants.ProcessorStatus.NegativeFlagSet)).toBe(!0)})})}),describe("DEY - Decrement Y Register",function(){beforeEach(function(){t=new Emulator.DecYSingle}),describe("given any value greater than 0x0",function(){beforeEach(function(){n.rY=i,t.execute(n)}),it("then should set the Y register to one less than the value",function(){expect(n.rY).toBe(f),expect(n.checkFlag(Constants.ProcessorStatus.NegativeFlagSet)).toBe(!1),expect(n.checkFlag(Constants.ProcessorStatus.ZeroFlagSet)).toBe(!1)})}),describe("given any negative greater than 0x80",function(){beforeEach(function(){n.rY=r,t.execute(n)}),it("then should set the Y register to one less than the value and set the negative flag",function(){expect(n.rY).toBe(e),expect(n.checkFlag(Constants.ProcessorStatus.NegativeFlagSet)).toBe(!0),expect(n.checkFlag(Constants.ProcessorStatus.ZeroFlagSet)).toBe(!1)})}),describe("given 0x00",function(){beforeEach(function(){n.rY=o,t.execute(n)}),it("then should set the Y register to 0xFF (roll) and set the negative flag",function(){expect(n.rY).toBe(s),expect(n.checkFlag(Constants.ProcessorStatus.ZeroFlagSet)).toBe(!1),expect(n.checkFlag(Constants.ProcessorStatus.NegativeFlagSet)).toBe(!0)})})})})})(Tests||(Tests={}))